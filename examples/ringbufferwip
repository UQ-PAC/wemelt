_var z:
_L: TRUE
_Mode: NoW

_var mouse:
_L: TRUE
_Mode: RW

_array x[5]:
_L: z % 2 == 0
_Mode: NoW

_var high:
_L: FALSE
_Mode: NoRW 

_var low:
_L: TRUE
_Mode: NoRW

_var r_size:
_L: TRUE

_var r_index:
_L: TRUE

_P_0: z % 2 == 0, r_index >= 0, r_index < 5, r_size == 5, z == 0
_Gamma_0: x[1] -> LOW, x[2] -> LOW, x[3] -> LOW, x[4] -> LOW, x[0] -> LOW, high -> HIGH, low -> LOW, r_size -> LOW, r_index -> LOW


while(TRUE) 
_invariant: r_index >= 0, r_index < 5, r_size == 5
_Gamma: x[1] -> HIGH, x[2] -> HIGH, x[3] -> HIGH, x[4] -> HIGH, x[0] -> HIGH, high -> HIGH, low -> LOW, r_size -> LOW, r_index -> LOW
{
  if (z % 2 == 0 && mouse == 1) {
    z = z + 1;
  } else {
    if (z % 2 == 1 && mouse == 0) {
      x[0] = 0;
      x[1] = 0;
      x[2] = 0;
      x[3] = 0;
      x[4] = 0;
      fence;
      z = z + 1;
    }
  }
  if (z % 2 == 0) {
    x[r_index] = low;
    r_index = (r_index + 1) % r_size;
    fence; // needed due to broken forwarding with laterR
    x[r_index] = low;
    r_index = (r_index + 1) % r_size;
  } else {
    x[r_index] = high;
    r_index = (r_index + 1) % r_size;
    fence; // needed due to broken forwarding with laterR
    x[r_index] = high;
    r_index = (r_index + 1) % r_size;
  }
  fence;
}
