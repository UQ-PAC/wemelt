_var r_h:
_L: TRUE

_var r_t:
_L: TRUE

_var r_task:
_L: FALSE

_var head:
_L: TRUE
_Mode: RW

_var tail:
_L: TRUE
_Mode: RW

_var L:
_L: TRUE
_Mode: NoW

_var take_result:
_L: TRUE
_Mode: NoW

_var r_index:
_L: TRUE

_array tasks[2]:
_L[0]: sec[0] == 0
_L[1]: sec[1] == 0
_Mode: RW

_array sec[2]:
_L: TRUE
_Mode: NoW

_var r_cas_result:
_L: TRUE

_P_0: L == 2
_Gamma_0: r_cas_result -> LOW, r_h -> LOW, r_index -> LOW, L -> LOW, take_result -> LOW, r_t -> LOW, r_task -> LOW

r_t = tail - 1;
tail = r_t;
r_h = head;
if (r_h <= r_t) {
  r_index = r_t % L;
  if (sec[r_index] == 0) {
    r_task = tasks[r_index];
    if (r_h == r_t) {
      r_cas_result = CAS(head, r_h, r_h + 1);
      if (r_cas_result == 0) {
        r_task = 0;
      }
      tail = tail + 1;
    }
  } else {
    r_task = -1;
    tail = tail + 1;
  }
} else {
    r_task = 0;
    tail = tail + 1;
}
take_result = r_task;
